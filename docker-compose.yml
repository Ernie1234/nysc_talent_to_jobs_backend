version: '3.8'

services:
  # Backend API
  api:
    build:
      context: .
      target: development
    container_name: nysc-backend-dev
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE=30d
      - SESSION_SECRET=${SESSION_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CALLBACK_URL_DEV=http://localhost:5000/api/auth/google/callback
      - FRONTEND_URL=http://localhost:3000
    volumes:
      - .:/app
      - /app/node_modules
      - /app/dist
    networks:
      - nysc-network
    depends_on:
      - mongodb
    restart: unless-stopped
    command: npm run dev

  # MongoDB for local development (optional)
  mongodb:
    image: mongo:7
    container_name: nysc-mongodb-dev
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=nysc_talents
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - nysc-network
    restart: unless-stopped

  # MongoDB Express (Database GUI)
  mongo-express:
    image: mongo-express:latest
    container_name: nysc-mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password123
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
    depends_on:
      - mongodb
    networks:
      - nysc-network
    restart: unless-stopped

  # Redis for sessions (optional)
  redis:
    image: redis:7-alpine
    container_name: nysc-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nysc-network
    restart: unless-stopped

networks:
  nysc-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: